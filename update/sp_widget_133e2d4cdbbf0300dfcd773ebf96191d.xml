<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope, $rootScope) {
	/* widget controller */
	var c = this;
	c.selectItem = function(idx) {
		var id = c.data.notes[idx].sys_id;
		// scope idx to the root so we can use it to update the correct note later
		$rootScope.index = idx;
		$rootScope.noteID = id;
		$rootScope.$emit('selectNote', id);
	}

	$rootScope.$on('noteUpdated', function(event,data) {
		c.server.get({
			action: 'noteUpdated',
			noteID: $rootScope.noteID
		}).then(function(r) {
			var index = $rootScope.index;
			console.log("index is " + index);
			c.data.notes[index].title = r.data.note.title;
			c.data.notes[index].note = r.data.note.note;
		});
	});
}]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>notes-list</id>
        <internal>false</internal>
        <link/>
        <name>Notes List</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	// create an array to populate without notes
	data.notes=[];
	var noteGR = new GlideRecord('x_snc_createnotes_note');
	noteGR.addQuery('user', gs.getUser().getID());
	noteGR.orderByDesc('sys_created_on');
	noteGR.query();
	while (noteGR.next()) {
		var noteObj = {};
		// use service portal helper method to get some display values
		$sp.getRecordDisplayValues(noteObj, noteGR, 'number, title, sys_id');
		// get the first 20 chars of the description
		noteObj.note = noteGR.getValue('note').slice(0,20);
		// push the populated object into the array
		data.notes.push(noteObj);
	}
	if (input && input.noteID && input.action == 'noteUpdated') {
		var updatedGR = new GlideRecord('x_snc_createnotes_note');
	  if (updatedGR.get(input.noteID)) {
			data.note = {};
			$sp.getRecordValues(data.note, updatedGR, "title, note, sys_id");
		}	
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-01-16 20:10:56</sys_created_on>
        <sys_id>133e2d4cdbbf0300dfcd773ebf96191d</sys_id>
        <sys_mod_count>40</sys_mod_count>
        <sys_name>Notes List</sys_name>
        <sys_package display_value="CreateNotes" source="x_snc_createnotes">df5fd9a5090232007f44e1046c8ff69f</sys_package>
        <sys_policy/>
        <sys_scope display_value="CreateNotes">df5fd9a5090232007f44e1046c8ff69f</sys_scope>
        <sys_update_name>sp_widget_133e2d4cdbbf0300dfcd773ebf96191d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-01-17 18:10:35</sys_updated_on>
        <template><![CDATA[<div class="panel panel-default">
  <div class="panel-heading clearfix">
    <h3 class="panel-title pull-left">
      ${Notes}
    </h3>
  </div>
  <div class="list-group">
    <a class="list-group-item" ng-click="c.selectItem($index)" ng-repeat="note in data.notes">                  
      <h4 class="list-group-item-heading">
        {{note.title}}
      </h4>
      <p class="list-group-item-text">
        {{note.note}}   
      </p>
    </a>                      
  </div>
</div>
]]></template>
    </sp_widget>
</record_update>
